---
# FILE:            {{ role_path }}/tasks/main.yml
# LICENSE:         Public Domain

# TODO: demos for public html sould ideally be on one of these paths:
#           /var/www/
#           /srv
#           /usr/share/www
#       To respect the Filesystem Hierarchy Standard (FHS) 3.0
#       (fititnt, 2020-01-06 14:40 BRT)

- name: "Ansible Faker | Welcome message"
  debug:
    msg:
      faker_version: "{{ faker_version }}"
      node:
        os: "{{ ansible_os_family | default('undefined') | lower }}"
        dist: "{{ ansible_distribution | default('undefined') | lower }}"
        dist_release: "{{ ansible_distribution_release | default('undefined') | lower }}"
        dist_major_ver: "{{ ansible_distribution_major_version | default('undefined') | lower }}"
        ansible_lsb: "{{ ansible_lsb | default('undefined') }}"
        # If behind NAT, this may not represent real public IPv4.
        # Alternative: https://docs.ansible.com/ansible/latest/modules/ipify_facts_module.html
        ansible_default_ipv4: "{{ ansible_default_ipv4.address | default('undefined') }}"
  tags:
    - alb
    - always

## Variable loading based on node Operational System ___________________________
- name: "Ansible Faker | OS Family variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (faker_iswindows is defined and faker_iswindows|bool) | ternary('os-family/windows.yml', 'name-of-a-file-that-does-not-exist.yml') }}"
    - "{{ (faker_vars_osfamily is defined) | ternary(faker_vars_osfamily, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/{{ ansible_os_family | default('undefined') | lower }}.yml"
    - "os-family/{{ (ansible_os_family is defined) | ternary('untested','unknown') }}.yml"
  tags:
    - alb
    - always

- name: "Ansible Faker | OS Family version variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (faker_vars_osfamilyversion is defined) | ternary(faker_vars_osfamilyversion, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/os-family-version/{{ ansible_os_family | default('undefined') | lower }}-{{ ansible_distribution_major_version
      | default('undefined')
      | lower }}.yml"
    - "os-family/os-family-version/no-os-family-version-customization.yml"
  tags:
    - alb
    - always

- name: "Ansible Faker | Distribution variables (may override OS Family variables, if exist)"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (faker_vars_distribution is defined) | ternary(faker_vars_distribution, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/distribution/{{ ansible_distribution | default('undefined') | lower }}.yml"
    - "os-family/distribution/no-os-family-customization.yml"
  tags:
    - alb
    - always

- name: "Ansible Faker | Specific version distribution variables (may override OS Family and Distribution variables, if exist)"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ (faker_vars_distribution_version is defined) | ternary(faker_vars_distribution_version, 'name-of-a-file-that-does-not-exist.yml') }}"
    - "os-family/distribution/version/{{ ansible_distribution | default('undefined') | lower }}-{{ ansible_distribution_major_version
      | default('undefined')
      | lower }}.yml"
    - "os-family/distribution/version/no-distribution-customization.yml"
  tags:
    - alb
    - always

- name: "Ansible Faker | Result of pre-calculated variables on this play"
  debug:
    msg:
      faker_default_user: "{{ faker_default_user | default('undefined') }}"
      faker_default_group: "{{ faker_default_group | default('undefined') }}"
      faker_default_directory_mode: "{{ faker_default_directory_mode | default('undefined') }}"
      faker_default_file_mode: "{{ faker_default_file_mode | default('undefined') }}"
      faker_isconteiner: "{{ faker_isconteiner | default('undefined') }}"
  tags:
    - alb
    - always

## Run each Faker Subcomponents ________________________________________________

- name: "Ansible Faker | group"
  include: "{{ role_path }}/tasks/group/main.yml"
  when:
    - "(faker_groups is defined)
      and (faker_groups[0] is defined)
      and (faker_groups[0].name is defined)"
  tags:
    - faker-group

- name: "Ansible Faker | user"
  include: "{{ role_path }}/tasks/user/main.yml"
  when:
    - "(faker_users is defined)
      and (faker_users[0] is defined)
      and (faker_users[0].name is defined)"
  tags:
    - faker-user

- name: "Ansible Faker | static-site"
  include: "{{ role_path }}/tasks/static-site/main.yml"
  when:
    - "(faker_static_sites is defined)
      and (faker_static_sites[0] is defined)
      and (faker_static_sites[0].dest is defined)"
  tags:
    - faker-static-site

- name: "Ansible Faker | cdn"
  include: "{{ role_path }}/tasks/cdn/main.yml"
  when:
    - "(faker_cdns is defined)
      and (faker_cdns[0] is defined)
      and (faker_cdns[0].dest is defined)"
  tags:
    - faker-cdn

- name: "Ansible Faker | php-site"
  include: "{{ role_path }}/tasks/php-site/main.yml"
  when:
    - "(faker_php_sites is defined)
      and (faker_php_sites[0] is defined)
      and (faker_php_sites[0].dest is defined)"
  tags:
    - faker-php-site
